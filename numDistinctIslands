class Solution:
    def numDistinctIslands(self, grid: List[List[int]]) -> int:
        def dfs(i, j, i0, j0):
            grid[i][j] = 0
            shape.add((i-i0, j-j0)) 
            for x, y in directions:
                r, c = i + x, j + y
                if 0 <= r < m and 0 <= c < n and grid[r][c]:
                    dfs(r, c, i0, j0)
            
        shapes, m, n = set(), len(grid), len(grid[0])
        directions = [(0, 1), (1, 0), (-1, 0), (0, -1)]
        for i in range(m):
            for j in range(n):
                if grid[i][j]:
                    shape = set()
                    dfs(i, j, i, j)
                    shapes.add(frozenset(shape))
        return len(shapes)
